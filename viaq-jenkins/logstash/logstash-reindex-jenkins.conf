input {
  elasticsearch {
   hosts => ["elasticsearch.perf.lab.eng.bos.redhat.com:80"]
   index => "rhci-logstash-2016.03.14"
   docinfo => true
   size => 10000
  }
}

filter {
  mutate {

# Top level fields:
    rename => { "[fields][parameters][JSLAVEIP]" => "[ipaddr4]" }  
    rename => { "[fields][parameters][LOGLEVEL]" => "[level]" } # LOGLEVEL values - DEBUG only
    rename => { "[log_file]" => "[file]" } # filename 
    rename => { "[fields][node_name]" => "[hostname]" }

# Fields common for CI master
    rename => { "[fields][host_name]" => "[ci_master][hostname]" }  # host_name seem to only have 192.168.122.1, is this master?

# Fields common for CI build agent
    rename => { "[fields][parameters][JSLAVELABEL]" => "[ci_agent][label]" }
    rename => { "[fields][parameters][JSLAVENAME]" => "[ci_agent][name]" }

# Fields common for CI job
    rename => { "[fields][status]" => "[ci_job][status]" } # SUCCESS|FAILURE
    rename => { "[fields][number]" => "[ci_job][build_id]" } # needs to be merged?
    rename => { "[fields][full_url]" => "[ci_job][full_url]" } 
    rename => { "[job_name]" => "[ci_job][name]" }
    rename => { "[fields][phase]" => "[ci_job][phase]" }
    rename => { "[log_url]" => "[ci_job][log_url]" }


# RHCI-specific fields:
    rename => { "[fields][parameters][BKR_JOBID]" => "[rhci][BKR_JOBID]" }
    rename => { "[fields][parameters][CI_MESSAGE]" => "[rhci][CI_MESSAGE]" } # always empty??
    rename => { "[fields][parameters][EXISTING_NODES]" => "[rhci][EXISTING_NODES]" }
    rename => { "[fields][parameters][PRIVATE_IPS]" => "[rhci][PRIVATE_IPS]" }
    rename => { "[fields][parameters][PROVISION_JOB]" => "[rhci][PROVISION_JOB]" }
    rename => { "[fields][parameters][SITE]" => "[rhci][SITE]" } #qeos always
    rename => { "[fields][parameters][UUID]" => "[rhci][UUID]" } # alway empty?
    rename => { "[fields][parameters][cleanup]" => "[rhci][cleanup]" }
    rename => { "[fields][parameters][deployment_target]" => "[rhci][deployment_target]" }
    rename => { "[fields][parameters][disconnected_mode]" => "[rhci][disconnected_mode]" } # always true?
    rename => { "[fields][parameters][email-list]" => "[rhci][email-list]" }
    rename => { "[ise_ci_branch]" => "[rhci][ise_ci_branch]" }
    rename => { "[iso_source]" => "[rhci][iso_source]" } # top level only
    rename => { "[job_type]" => "[rhci][job_type]" }
    rename => { "[fields][parameters][jobstartwait]" => "[rhci][jobstartwait]" } # always 1800
    rename => { "[fields][parameters][junk]" => "[rhci][junk]" } # top level only? always /
    rename => { "[fields][parameters][phase2_pipeline]" => "[rhci][phase2_pipeline]" } # pit_phase2_pipeline
    rename => { "[pit_branch]" => "[rhci][pit_branch]" } # top level only?
    rename => { "[project_name]" => "[rhci][project_name]" } # top level only, RHCS-CFME
    rename => { "[scenario_name]" => "[rhci][scenario_name]" } # top level only
    rename => { "[fields][parameters][teardown]" => "[rhci][teardown]" }
    rename => { "[fields][parameters][LABEL]" => "[rhci][LABEL]" }
    rename => { "[fields][parameters][osp_controller_count]" => "[rhci][osp_controller_count]" }
    rename => { "[fields][parameters][osp_hypervisor_count]" => "[rhci][osp_hypervisor_count]" }
    rename => { "[fields][parameters][rhev_hypervisor_count]" => "[rhci][rhev_hypervisor_count]" }

# Delete fields that are not necessary:
    remove_field => [ "[fields][url]",
                      "[host]"       #it's always 127.0.0.1 at the moment.
                    ]

  }


# Remove duplicated fields. Need to add more conditions, so that unequal items actually get to custom fields
  if [fields][parameters][ise-ci-branch] and [fields][parameters][ise-ci-branch] != [rhci][ise_ci_branch] {
    mutate { add_tag => ["failed_ise_ci_branch"]
    remove_field => ["[fields][parameters][ise-ci-branch]"]
}
  } else if [fields][parameters][ise-ci-branch] {
    mutate {
      rename => { "[fields][parameters][ise-ci-branch]" => "[rhci][ise_ci_branch]" }
      remove_field => ["[fields][parameters][ise-ci-branch]"]
    }
  }

  mutate { convert => {"build_id" => "integer"}}
  if [build_id] and [build_id] != [ci_job][build_id] {
      mutate { remove_field => ["[build_id]"]
      add_tag => ["failed_build_id"]
      }
    } else if [build_id] {
      mutate {
        rename => { "[build_id]" => "[ci_job][build_id]" }
      }
    }
 

# Remove empty [fields][parameters] section
mutate {
remove_field => ["[fields]"]
}

# Add pipeline metadata:
  mutate {
    add_field => { "[pipeline_metadata][trace]" => "logstash,reindex,2016.03.16"}
  }
}


output {
 elasticsearch {
   host => "elasticsearch.perf.lab.eng.bos.redhat.com:80"
   protocol => "http"
   manage_template => false
   index => "rhci-v2016.03.16.0-jenkins-2016.03.14"
   document_type => "jenkins_data" # change document_type to the desired type 
   document_id => "%{[@metadata][_id]}" #preserving document_id is essential for troubleshooting
   workers => 5
 }
}

